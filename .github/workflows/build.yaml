---
on:
  push:
    branches:
      - golang
  pull_request:
    branches:
      - golang

jobs:
  build-matrix:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOOS: [linux, windows, darwin]
        GOARCH: ["386", amd64, arm64]
        exclude:
          - GOARCH: "386"
            GOOS: darwin

          - GOARCH: arm64
            GOOS: windows
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: ^1.18
          check-latest: true

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install github.com/josephspurrier/goversioninfo
        run: |
          go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
          go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo

      - name: go generate
        if: matrix.GOOS == 'windows'
        run: go generate
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          CGO_ENABLED: 0

      - name: go build
        run: go build .
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          CGO_ENABLED: 0

      - uses: actions/upload-artifact@v3
        if: matrix.GOOS == 'windows'
        with:
          name: turknet-query_windows_${{ matrix.GOARCH }}
          path: turknet-query.exe

      - uses: actions/upload-artifact@v3
        if: matrix.GOOS != 'windows'
        with:
          name: turknet-query_${{ matrix.GOOS }}_${{ matrix.GOARCH }}
          path: turknet-query
